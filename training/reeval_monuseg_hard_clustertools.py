import os
import pickle

from train_monuseg_hard_clustertools import weight_exclude, exclude_target_and_dice_calibration, no_distillation_filter, \
    filter_nc_rr, min_weight_only_for_entropy
from clustertools import set_stdout_logging, Experiment, ParameterSet, CTParser, build_datacube
from clustertools.parameterset import build_parameter_set
from clustertools.storage import PickleStorage

from generic_reeval import ReevalMonusegComputation
from train_segpc_hard_clustertools import computation_changing_parameters


def env_parser():
    parser = CTParser()
    parser.add_argument("--model_path", dest="model_path")
    parser.add_argument("--data_path", dest="data_path")
    parser.add_argument("--device", dest="device", default="cuda:0")
    parser.add_argument("--n_jobs", dest="n_jobs", default=1, type=int)
    return parser


def main(argv):
    set_stdout_logging()
    # Define the parameter set: the domain each variable can take

    environment, namespace = env_parser().parse()
    env_params = dict(namespace._get_kwargs())

    param_set = ParameterSet()

    exp_name = "monuseg-unet-hard"

    setattr(main, "weight_exclude", weight_exclude)
    setattr(main, "exclude_target_and_dice_calibration", exclude_target_and_dice_calibration)
    setattr(main, "no_distillation_filter", no_distillation_filter)
    setattr(main, "filter_nc_rr", filter_nc_rr)
    setattr(main, "min_weight_only_for_entropy", min_weight_only_for_entropy)

    results_path = os.path.join("/home", "rmormont", "clustertools_data", "exp_monuseg-unet-hard", "results")
    indexes = sorted([int(filename.split(".")[0].split("-")[-1]) for filename in os.listdir(results_path)])

    already_computed = [121, 123, 124, 125, 134, 135, 137, 138, 139, 281, 283, 284, 285, 294, 295, 297, 298, 299, 441, 443, 444, 445, 454, 455, 457, 458, 459, 601, 603, 604, 605, 614, 615, 617, 618, 619, 761, 763, 764, 765, 774, 775, 777, 778, 779, 921, 923, 924, 925, 934, 935, 937, 938, 939, 1081, 1083, 1084, 1085, 1094, 1095, 1097, 1098, 1099, 1241, 1243, 1244, 1245, 1254, 1255, 1257, 1258, 1259, 1401, 1403, 1404, 1405, 1414, 1415, 1417, 1418, 1419, 1561, 1563, 1564, 1565, 1574, 1575, 1577, 1578, 1579, 1601, 1603, 1604, 1605, 1614, 1615, 1617, 1618, 1619, 1623, 1681, 1683, 1684, 1685, 1694, 1695, 1697, 1698, 1699, 1703, 1721, 1723, 1724, 1725, 1734, 1735, 1737, 1738, 1739, 1743, 1761, 1763, 1764, 1765, 1774, 1775, 1777, 1778, 1779, 1783, 1841, 1843, 1844, 1845, 1854, 1855, 1857, 1858, 1859, 1863, 1881, 1883, 1884, 1885, 1894, 1895, 1897, 1898, 1899, 1903, 1921, 1923, 1924, 1925, 1934, 1935, 1937, 1938, 1939, 1943, 2001, 2003, 2004, 2005, 2014, 2015, 2017, 2018, 2019, 2023, 2041, 2043, 2044, 2045, 2054, 2055, 2057, 2058, 2059, 2063, 2081, 2083, 2084, 2085, 2094, 2095, 2097, 2098, 2099, 2103, 2161, 2163, 2164, 2165, 2174, 2175, 2177, 2178, 2179, 2183, 2201, 2203, 2204, 2205, 2214, 2215, 2217, 2218, 2219, 2223, 2241, 2243, 2244, 2245, 2254, 2255, 2257, 2258, 2259, 2263, 2321, 2323, 2324, 2325, 2334, 2335, 2337, 2338, 2339, 2343, 2361, 2363, 2364, 2365, 2374, 2375, 2377, 2378, 2379, 2383, 2401, 2403, 2404, 2405, 2414, 2415, 2417, 2418, 2419, 2423, 2481, 2483, 2484, 2485, 2494, 2495, 2497, 2498, 2499, 2503, 2521, 2523, 2524, 2525, 2534, 2535, 2537, 2538, 2539, 2543, 2561, 2563, 2564, 2565, 2574, 2575, 2577, 2578, 2579, 2583, 2641, 2643, 2644, 2645, 2654, 2655, 2657, 2658, 2659, 2663, 2681, 2683, 2684, 2685, 2694, 2695, 2697, 2698, 2699, 2703, 2721, 2723, 2724, 2725, 2734, 2735, 2737, 2738, 2739, 2743, 2801, 2803, 2804, 2805, 2814, 2815, 2817, 2818, 2819, 2823, 2841, 2843, 2844, 2845, 2854, 2855, 2857, 2858, 2859, 2863, 2881, 2883, 2884, 2885, 2894, 2895, 2897, 2898, 2899, 2903, 2961, 2963, 2964, 2965, 2974, 2975, 2977, 2978, 2979, 2983, 3001, 3003, 3004, 3005, 3014, 3015, 3017, 3018, 3019, 3023, 3041, 3043, 3044, 3045, 3054, 3055, 3057, 3058, 3059, 3063, 3121, 3123, 3124, 3125, 3134, 3135, 3137, 3138, 3139, 3143, 3161, 3163, 3164, 3165, 3174, 3175, 3177, 3178, 3179, 3183, 8441, 8443, 8444, 8445, 8454, 8455, 8457, 8458, 8459, 8681, 8683, 8684, 8685, 8694, 8695, 8697, 8698, 8699, 9241, 9243, 9244, 9245, 9254, 9255, 9257, 9258, 9259, 9481, 9483, 9484, 9485, 9494, 9495, 9497, 9498, 9499, 10041, 10043, 10044, 10045, 10054, 10055, 10057, 10058, 10059, 10281, 10283, 10284, 10285, 10294, 10295, 10297, 10298, 10299, 10841, 10843, 10844, 10845, 10854, 10855, 10857, 10858, 10859, 11081, 11083, 11084, 11085, 11094, 11095, 11097, 11098, 11099, 11641, 11643, 11644, 11645, 11654, 11655, 11657, 11658, 11659, 12441, 12443, 12444, 12445, 12454, 12455, 12457, 12458, 12459, 12681, 12683, 12684, 12685, 12694, 12695, 12697, 12698, 12699, 13241, 13243, 13244, 13245, 13254, 13255, 13257, 13258, 13259, 13481, 13483, 13484, 13485, 13494, 13495, 13497, 13498, 13499, 14041, 14043, 14044, 14045, 14054, 14055, 14057, 14058, 14059, 14281, 14283, 14284, 14285, 14294, 14295, 14297, 14298, 14299, 14841, 14843, 14844, 14845, 14854, 14855, 14857, 14858, 14859, 15081, 15083, 15084, 15085, 15094, 15095, 15097, 15098, 15099, 15641, 15643, 15644, 15645, 15654, 15655, 15657, 15658, 15659, 15881, 15883, 15884, 15885, 15894, 15895, 15897, 15898, 15899, 16241, 16243, 16244, 16245, 16254, 16255, 16257, 16258, 16259, 16263, 16441, 16443, 16444, 16445, 16454, 16455, 16457, 16458, 16459, 16463, 16561, 16563, 16564, 16565, 16574, 16575, 16577, 16578, 16579, 16583, 16681, 16683, 16684, 16685, 16694, 16695, 16697, 16698, 16699, 16703, 17041, 17043, 17044, 17045, 17054, 17055, 17057, 17058, 17059, 17063, 17241, 17243, 17244, 17245, 17254, 17255, 17257, 17258, 17259, 17263, 17361, 17363, 17364, 17365, 17374, 17375, 17377, 17378, 17379, 17383, 17481, 17483, 17484, 17485, 17494, 17495, 17497, 17498, 17499, 17503, 17841, 17843, 17844, 17845, 17854, 17855, 17857, 17858, 17859, 17863, 18041, 18043, 18044, 18045, 18054, 18055, 18057, 18058, 18059, 18063, 18161, 18163, 18164, 18165, 18174, 18175, 18177, 18178, 18179, 18183, 18281, 18283, 18284, 18285, 18294, 18295, 18297, 18298, 18299, 18303, 18641, 18643, 18644, 18645, 18654, 18655, 18657, 18658, 18659, 18663, 18841, 18843, 18844, 18845, 18854, 18855, 18857, 18858, 18859, 18863, 18961, 18963, 18964, 18965, 18974, 18975, 18977, 18978, 18979, 18983, 19081, 19083, 19084, 19085, 19094, 19095, 19097, 19098, 19099, 19103, 19441, 19443, 19444, 19445, 19454, 19455, 19457, 19458, 19459, 19463, 19641, 19643, 19644, 19645, 19654, 19655, 19657, 19658, 19659, 19663, 19761, 19763, 19764, 19765, 19774, 19775, 19777, 19778, 19779, 19783, 19881, 19883, 19884, 19885, 19894, 19895, 19897, 19898, 19899, 19903, 20241, 20243, 20244, 20245, 20254, 20255, 20257, 20258, 20259, 20263, 20441, 20443, 20444, 20445, 20454, 20455, 20457, 20458, 20459, 20463, 20561, 20563, 20564, 20565, 20574, 20575, 20577, 20578, 20579, 20583, 20681, 20683, 20684, 20685, 20694, 20695, 20697, 20698, 20699, 20703, 21041, 21043, 21044, 21045, 21054, 21055, 21057, 21058, 21059, 21063, 21241, 21243, 21244, 21245, 21254, 21255, 21257, 21258, 21259, 21263, 21361, 21363, 21364, 21365, 21374, 21375, 21377, 21378, 21379, 21383, 21481, 21483, 21484, 21485, 21494, 21495, 21497, 21498, 21499, 21503, 21841, 21843, 21844, 21845, 21854, 21855, 21857, 21858, 21859, 21863, 22041, 22043, 22044, 22045, 22054, 22055, 22057, 22058, 22059, 22063, 22161, 22163, 22164, 22165, 22174, 22175, 22177, 22178, 22179, 22183, 22281, 22283, 22284, 22285, 22294, 22295, 22297, 22298, 22299, 22303, 22641, 22643, 22644, 22645, 22654, 22655, 22657, 22658, 22659, 22663, 22841, 22843, 22844, 22845, 22854, 22855, 22857, 22858, 22859, 22863, 22961, 22963, 22964, 22965, 22974, 22975, 22977, 22978, 22979, 22983, 23081, 23083, 23084, 23085, 23094, 23095, 23097, 23098, 23099, 23103, 23441, 23443, 23444, 23445, 23454, 23455, 23457, 23458, 23459, 23463, 23641, 23643, 23644, 23645, 23654, 23655, 23657, 23658, 23659, 23663, 23761, 23763, 23764, 23765, 23774, 23775, 23777, 23778, 23779, 23783, 23881, 23883, 23884, 23885, 23894, 23895, 23897, 23898, 23899, 23903, 24147, 24347, 24547, 24747, 24947, 25147, 25347, 25547, 25747, 25947, 26147, 26347, 26547, 26747, 27147, 27347, 27547, 27747, 27947, 28147, 28347, 28547, 28747, 28947, 29147, 29347, 29547, 29747, 29947, 30007, 30127, 30147, 30207, 30347, 30447, 30547, 30607, 30727, 30747, 30807, 30947, 31047, 31147, 31207, 31327, 31347, 31407, 31547, 31647, 31747, 31807, 31927, 31947, 32007, 32147, 32247, 32347, 32407, 32527, 32547, 32607, 32747, 32847, 32947, 33007, 33127, 33147, 33207, 33347, 33447, 33547, 33607, 33727, 33747, 33807, 33947, 34047, 34147, 34207, 34327, 34347, 34407, 34547, 34647, 34747, 34807, 34927, 34947, 35007, 35147, 35247, 35347, 35407, 35527, 35547, 35607, 35747, 35847, 35947]

    param_set.add_parameters(sets="test,val")
    param_set.add_parameters(train_exp=exp_name)
    param_set.add_parameters(comp_index=already_computed)
    for comp_index in set(indexes).difference(already_computed):
        param_set.add_separator()
        param_set.add_parameters(comp_index=comp_index)

    def make_build_fn(**kwargs):
        def build_fn(exp_name, comp_name, context="n/a", storage_factory=PickleStorage):
            return ReevalMonusegComputation(exp_name, comp_name, **kwargs, context=context,
                                            storage_factory=storage_factory)

        return build_fn

    # Wrap it together as an experiment
    experiment = Experiment("monuseg-reeval-hard", param_set, make_build_fn(**env_params))

    computation_changing_parameters(experiment, environment)

    # Finally run the experimenthis
    environment.run(experiment)


if __name__ == "__main__":
    import sys

    main(sys.argv[1:])
